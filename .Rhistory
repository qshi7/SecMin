load("~/Library/CloudStorage/Box-Box/GitHub/SecMin/data/example_dataset.rda")
summary(example_dataset)
data = as.data.frame(example_dataset)
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])!="numeric",next,mean(data[,i]))
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])=="numeric",mean(data[,i]),next)
}
for (i in 1:7) {
ifelse(i==3,next,i+2)
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])=="numeric",print(mean(data[,i])),next)
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])=="numeric",print(hist(data[,i])),next)
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])!="numeric",next,
return(hist(data[,i])))
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])!="numeric",next,
hist(data[,i]))
}
I <- as.numeric(length(data))
for (i in 1:I) { i <- as.numeric(i)
ifelse(class(data[,i])!="numeric",next,
hist(data[,i]))
}
lapply(data, class)
apply(data, class)
which(sapply(data,class)=='numeric')
length(which(sapply(data,class)=='numeric'))
x = which(sapply(data,class)=='numeric')
class(x)
n = which(sapply(data,class)=='numeric')
rm(x)
n = which(sapply(data,class)=='numeric')
for (i in 1:n) { i <- as.numeric(i)
mean(data[,i])
}
n = as.numeric(which(sapply(data,class)=='numeric'))
for (i in 1:n) { i <- as.numeric(i)
mean(data[,i])
}
for (i in 2:n) { i <- as.numeric(i)
mean(data[,i])
}
for (i in n) { i <- as.numeric(i)
mean(data[,i])
}
n = as.numeric(which(sapply(data,class)=='numeric'))
for (i in n) { i <- as.numeric(i)
print(mean(data[,i]))
}
n = as.numeric(which(sapply(data,class)=='numeric'))
for (i in n) { i <- as.numeric(i)
hist(data[,i])
}
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_density()
library(tydir)
library(tidyr)
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_density()
library(ggplot2)
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_density()
?keep
library(purrr)
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_density()
?facet_wrap
data %>%
keep(is.numeric) %>%
gather() %>%
11
data %>%
keep(is.numeric) %>%
gather()
x = data %>%
keep(is.numeric) %>%
gather()
View(x)
View(data)
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_histogram()
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_histogram()
histall <- function(data) {
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_histogram()
}
histall(data)
histall(data)
histall <- function(data) {
data %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key,scales = "free") +
geom_histogram(bins=30)
}
histall(data)
View(data)
x = data[,c(10:20)]
histall
histall(x)
names(data)
x = data[,c(50:69)]
histall(x)
devtools::check()
devtools::check()
rlang::last_error()
library(devtools)
check()
check
check()
check()
check()
check()
load_all()
exists("SecMin", where =globalenv(), inherits =FALSE)
load("~/Library/CloudStorage/Box-Box/GitHub/SecMin/data/example_dataset.rda")
x = example_dataset[,c(50:69)]
histall(x)
